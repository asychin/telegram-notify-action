name: Deployment with Updates

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    steps:
      - name: Pre-deployment notification
        uses: asychin/telegram-notify-action@v3
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: info
          message: |
            üöÄ **–ù–∞—á–∞–ª–æ –¥–µ–ø–ª–æ—è**
            
            üéØ **–û–∫—Ä—É–∂–µ–Ω–∏–µ:** {{actionsEnvironment}}
            üìù **ID –æ–∫—Ä—É–∂–µ–Ω–∏—è:** {{actionsEnvironmentId}}
            üîó **URL –æ–∫—Ä—É–∂–µ–Ω–∏—è:** {{actionsEnvironmentUrl}}
            
            üì¶ **–í–µ—Ä—Å–∏—è:** {{tagName}}
            üè∑Ô∏è **–ò–º—è —Ä–µ–ª–∏–∑–∞:** {{releaseName}}
            üë§ **–ê–≤—Ç–æ—Ä —Ä–µ–ª–∏–∑–∞:** {{releaseAuthor}}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {{repositoryOwner}}
            üîó **–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ª–∏–∑:** {{releaseUrl}}
            
            üèÉ **Runner:** {{runnerName}} –Ω–∞ {{runnerOs}}
            üèóÔ∏è **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:** {{runnerArch}}
            üìÅ **Workspace:** {{workspace}}

      - name: Deploy to environment
        id: deploy
        run: |
          echo "Deploying to ${{ github.event.inputs.environment || 'production' }}..."
          
          # Simulate deployment
          sleep 10
          
          # Simulate success/failure (for demo)
          if [ "${{ github.event.inputs.environment }}" = "production" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "deploy_url=https://example.com" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
            echo "deploy_url=https://staging.example.com" >> $GITHUB_OUTPUT
          fi

      - name: Successful deployment notification
        if: steps.deploy.outputs.status == 'success'
        uses: asychin/telegram-notify-action@v3
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: success
          message: |
            ‚úÖ **–î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω**
            
            üéØ **–û–∫—Ä—É–∂–µ–Ω–∏–µ:** {{actionsEnvironment}}
            üåê **URL:** ${{ steps.deploy.outputs.deploy_url }}
            
            üìä **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—É—Å–∫–µ:**
            - ID: {{runId}}
            - –ù–æ–º–µ—Ä: {{runNumber}}
            - –ü–æ–ø—ã—Ç–∫–∞: {{runAttempt}}
            - Workflow: {{workflow}}
            - –ó–∞–¥–∞—á–∞: {{job}}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–î–µ–ø–ª–æ–∏–ª:** {{actor}}
            üïí **–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:** {{triggeredAt}}
            
            üñ•Ô∏è **–°–∏—Å—Ç–µ–º–∞:**
            - Runner: {{runnerName}}
            - –û–°: {{runnerOs}}
            - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {{runnerArch}}
            - Tool Cache: {{runnerToolCache}}
            - Temp: {{runnerTemp}}
            
            üåê **GitHub Environment:**
            - API: {{apiUrl}}
            - GraphQL: {{graphqlUrl}}
            - Server: {{serverUrl}}
          
      - name: Failed deployment notification
        if: failure()
        uses: asychin/telegram-notify-action@v3
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: error
          message: |
            ‚ùå **–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π**
            
            üéØ **–û–∫—Ä—É–∂–µ–Ω–∏–µ:** {{actionsEnvironment}}
            üö´ **–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏:** {{jobStatus}}
            
            üìä **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—É—Å–∫–µ:**
            - ID: {{runId}}
            - –ù–æ–º–µ—Ä: {{runNumber}}
            - –ü–æ–ø—ã—Ç–∫–∞: {{runAttempt}}
            - Workflow: {{workflow}}
            - –ó–∞–¥–∞—á–∞: {{job}}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä:** {{actor}}
            üîó **–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–ø—É—Å–∫:** {{serverUrl}}/{{repository}}/actions/runs/{{runId}}
            
            üñ•Ô∏è **–°–∏—Å—Ç–µ–º–∞:**
            - Runner: {{runnerName}}
            - –û–°: {{runnerOs}}
            - –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {{workspace}}

  post-deployment:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Post-deployment summary
        uses: asychin/telegram-notify-action@v3
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: info
          message: |
            üìã **–û—Ç—á–µ—Ç –æ –¥–µ–ø–ª–æ–µ**
            
            üéØ **–û–∫—Ä—É–∂–µ–Ω–∏–µ:** {{actionsEnvironment}}
            üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç:** ${{ needs.deploy.result }}
            
            üîç **–î–µ—Ç–∞–ª–∏ GitHub:**
            - –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {{repository}}
            - ID —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {{repositoryId}}
            - –í–ª–∞–¥–µ–ª–µ—Ü: {{repositoryOwner}}
            - ID –≤–ª–∞–¥–µ–ª—å—Ü–∞: {{repositoryOwnerId}}
            
            üîó **–ó–∞—â–∏—Ç–∞ –≤–µ—Ç–∫–∏:** {{refProtected}}
            üìù **–¢–∏–ø —Å—Å—ã–ª–∫–∏:** {{refType}}
            üåø **–í–µ—Ç–∫–∞:** {{refName}}
            üÜî **SHA:** {{sha}}
            
            üèÉ **–°–∏—Å—Ç–µ–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:**
            - –ò–º—è: {{runnerName}}
            - –û–°: {{runnerOs}}
            - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {{runnerArch}}
            - Tool Cache: {{runnerToolCache}}
            - Temp Directory: {{runnerTemp}}
            - Workspace: {{workspace}}
            
            üåê **GitHub –û–∫—Ä—É–∂–µ–Ω–∏–µ:**
            - ID: {{actionsEnvironmentId}}
            - URL: {{actionsEnvironmentUrl}}
          template_vars: |
            {
              "deploymentResult": "${{ needs.deploy.result }}",
              "finalStatus": "${{ needs.deploy.result == 'success' && '‚úÖ –£—Å–ø–µ—à–Ω–æ' || '‚ùå –ù–µ—É–¥–∞—á–Ω–æ' }}"
            }
