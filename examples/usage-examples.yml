# Telegram Notify Action - Usage Examples
# This file contains comprehensive examples of using the enhanced Telegram Notify Action

name: Usage Examples

on:
  workflow_dispatch:
    inputs:
      example_type:
        description: "Type of example to run"
        required: true
        type: choice
        options:
          - basic
          - templates
          - files
          - advanced
          - all

jobs:
  # 1. Basic Usage Examples
  basic-examples:
    name: Basic Usage Examples
    runs-on: ubuntu-latest
    if: github.event.inputs.example_type == 'basic' || github.event.inputs.example_type == 'all'
    steps:
      - uses: actions/checkout@v4

      # Simple text message
      - name: Simple Message
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: "Hello from GitHub Actions! üëã"

      # Message with HTML formatting
      - name: HTML Formatted Message
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            <b>Bold Text</b>
            <i>Italic Text</i>
            <code>Code Text</code>
            <pre>Preformatted Text</pre>
            <a href="https://github.com">Link</a>
          parse_mode: HTML

      # Message with Markdown formatting
      - name: Markdown Formatted Message
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            **Bold Text**
            *Italic Text*
            `Code Text`
            ```
            Preformatted Code Block
            ```
            [Link](https://github.com)
          parse_mode: Markdown

      # Silent notification
      - name: Silent Message
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: "This is a silent notification üîá"
          disable_notification: true

      # Message to thread/topic
      - name: Message to Thread
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: "Message posted to specific thread üßµ"
          message_thread_id: "123" # Replace with actual thread ID

  # 2. Template Examples
  template-examples:
    name: Template Examples
    runs-on: ubuntu-latest
    if: github.event.inputs.example_type == 'templates' || github.event.inputs.example_type == 'all'
    strategy:
      matrix:
        template: [success, error, warning, info, deploy, test, release]
    steps:
      - uses: actions/checkout@v4

      - name: ${{ matrix.template }} Template Example
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: ${{ matrix.template }}
          message: "Custom message for ${{ matrix.template }} template"
          template_vars: |
            {
              "deployStatus": "successful",
              "testStatus": "passed",
              "coverage": "95%",
              "version": "v2.0.0",
              "tag": "v2.0.0",
              "releaseNotes": "Example release notes for template demonstration"
            }
          language: en

  # 3. File Upload Examples
  file-examples:
    name: File Upload Examples
    runs-on: ubuntu-latest
    if: github.event.inputs.example_type == 'files' || github.event.inputs.example_type == 'all'
    steps:
      - uses: actions/checkout@v4

      # Create test files
      - name: Create Test Files
        run: |
          # Create a text document
          cat > test-document.txt << 'EOF'
          This is a test document created by GitHub Actions.

          Repository: ${{ github.repository }}
          Workflow: ${{ github.workflow }}
          Run ID: ${{ github.run_id }}
          Timestamp: $(date)

          This demonstrates file upload capabilities of the Telegram Notify Action.
          EOF

          # Create a JSON report
          cat > report.json << 'EOF'
          {
            "repository": "${{ github.repository }}",
            "workflow": "${{ github.workflow }}",
            "run_id": "${{ github.run_id }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "status": "success",
            "metrics": {
              "files_processed": 42,
              "duration": "2m 30s",
              "memory_usage": "128MB"
            }
          }
          EOF

          # Create a simple CSV
          cat > data.csv << 'EOF'
          Name,Value,Status
          Test 1,100,Success
          Test 2,95,Success
          Test 3,87,Warning
          Test 4,45,Error
          EOF

          # Create a simple PNG (1x1 pixel)
          echo -e '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x01\x00\x00\x00\x01\x08\x06\x00\x00\x00\x1f\x15\xc4\x89\x00\x00\x00\nIDATx\xdac\xf8\x0f\x00\x00\x01\x00\x01\x00\x00\x00\x00IEND\xaeB`\x82' > test-image.png

      # Send document
      - name: Send Document
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          file_path: test-document.txt
          file_type: document
          caption: |
            üìÑ **Test Document**

            Generated by GitHub Actions workflow
            Repository: ${{ github.repository }}

      # Send JSON report
      - name: Send JSON Report
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          file_path: report.json
          file_type: document
          caption: |
            üìä **Workflow Report**

            JSON report containing workflow metrics and status

      # Send CSV data
      - name: Send CSV Data
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          file_path: data.csv
          file_type: document
          caption: |
            üìà **Test Results Data**

            CSV file containing test results and metrics

      # Send image
      - name: Send Image
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          file_path: test-image.png
          file_type: photo
          caption: |
            üñºÔ∏è **Test Image**

            Sample image uploaded via GitHub Actions

  # 4. Advanced Features Examples
  advanced-examples:
    name: Advanced Features Examples
    runs-on: ubuntu-latest
    if: github.event.inputs.example_type == 'advanced' || github.event.inputs.example_type == 'all'
    steps:
      - uses: actions/checkout@v4

      # Message with inline keyboard
      - name: Message with Inline Keyboard
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            üéÆ **Interactive Message**

            This message includes interactive buttons below.
            Click on any button to navigate to different sections.
          inline_keyboard: |
            [
              [
                {"text": "üìä View Workflow", "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"},
                {"text": "üìù View Repository", "url": "${{ github.server_url }}/${{ github.repository }}"}
              ],
              [
                {"text": "üêõ Report Issue", "url": "${{ github.server_url }}/${{ github.repository }}/issues/new"},
                {"text": "üí¨ Discussions", "url": "${{ github.server_url }}/${{ github.repository }}/discussions"}
              ]
            ]

      # Message with retry configuration
      - name: Message with Custom Retry Settings
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: "This message uses custom retry settings for better reliability üîÑ"
          max_retries: 5
          retry_delay: 2

      # Message with all advanced options
      - name: Message with All Advanced Options
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            üöÄ **Advanced Configuration Example**

            This message demonstrates all advanced options:
            ‚Ä¢ Protected content (cannot be forwarded)
            ‚Ä¢ Custom parse mode
            ‚Ä¢ Web page preview disabled
            ‚Ä¢ Reply to specific message
            ‚Ä¢ Custom template variables
          parse_mode: HTML
          disable_web_page_preview: true
          protect_content: true
          reply_to_message_id: "123" # Replace with actual message ID
          allow_sending_without_reply: true
          template_vars: |
            {
              "customVar1": "Custom Value 1",
              "customVar2": "Custom Value 2",
              "timestamp": "${{ github.event.head_commit.timestamp }}"
            }

      # Conditional sending example (success only)
      - name: Success-Only Notification
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: "This message is only sent when the workflow succeeds ‚úÖ"
          send_on_success: true
          send_on_failure: false

      # Message editing example
      - name: Send Initial Message
        id: initial-message
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: "‚è≥ Processing... Please wait."

      - name: Simulate Processing
        run: sleep 5

      - name: Update Message
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message_id: ${{ steps.initial-message.outputs.message_id }}
          message: |
            ‚úÖ **Processing Complete!**

            The task has been completed successfully.
            Duration: 5 seconds
          inline_keyboard: |
            [
              [
                {"text": "üìä View Results", "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}
              ]
            ]

  # 5. Multi-language Examples
  multilingual-examples:
    name: Multi-language Examples
    runs-on: ubuntu-latest
    if: github.event.inputs.example_type == 'all'
    strategy:
      matrix:
        language: [en, ru]
    steps:
      - uses: actions/checkout@v4

      - name: Multi-language Template (${{ matrix.language }})
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: success
          language: ${{ matrix.language }}
          message: |
            ${{ matrix.language == 'en' && 'Multi-language support demonstration' || '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏' }}
          template_vars: |
            {
              "customMessage": "${{ matrix.language == 'en' && 'This message is in English' || '–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ' }}"
            }

  # 6. Error Handling Examples
  error-handling-examples:
    name: Error Handling Examples
    runs-on: ubuntu-latest
    if: github.event.inputs.example_type == 'all'
    steps:
      - uses: actions/checkout@v4

      # Demonstrate graceful error handling
      - name: Test with Invalid Token (Expected to Fail)
        uses: ./
        continue-on-error: true
        with:
          telegram_token: "invalid_token_for_testing"
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: "This should fail gracefully"
          max_retries: 1
          retry_delay: 1
        id: error-test

      - name: Report Error Test Results
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: ${{ steps.error-test.outcome == 'failure' && 'success' || 'error' }}
          message: |
            üß™ **Error Handling Test Results**

            Expected outcome: Failure
            Actual outcome: ${{ steps.error-test.outcome }}

            ${{ steps.error-test.outcome == 'failure' && '‚úÖ Error handling works correctly!' || '‚ùå Error handling failed!' }}

  # 7. Integration Examples
  integration-examples:
    name: Integration Examples
    runs-on: ubuntu-latest
    if: github.event.inputs.example_type == 'all'
    steps:
      - uses: actions/checkout@v4

      # Example: Notify about test results
      - name: Run Mock Tests
        id: tests
        run: |
          echo "Running mock tests..."
          # Simulate test results
          echo "passed=85" >> $GITHUB_OUTPUT
          echo "failed=3" >> $GITHUB_OUTPUT
          echo "skipped=2" >> $GITHUB_OUTPUT
          echo "coverage=92.5" >> $GITHUB_OUTPUT

      - name: Send Test Results
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: ${{ steps.tests.outputs.failed == '0' && 'success' || 'warning' }}
          message: |
            üìä **Test Results Summary**

            ‚Ä¢ Passed: ${{ steps.tests.outputs.passed }}
            ‚Ä¢ Failed: ${{ steps.tests.outputs.failed }}
            ‚Ä¢ Skipped: ${{ steps.tests.outputs.skipped }}
            ‚Ä¢ Coverage: ${{ steps.tests.outputs.coverage }}%
          template_vars: |
            {
              "testStatus": "${{ steps.tests.outputs.failed == '0' && 'All tests passed' || 'Some tests failed' }}",
              "coverage": "${{ steps.tests.outputs.coverage }}"
            }
          inline_keyboard: |
            [
              [
                {"text": "üìä View Details", "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"},
                {"text": "üìà Coverage Report", "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}
              ]
            ]

      # Example: Deployment notification
      - name: Mock Deployment
        id: deploy
        run: |
          echo "Simulating deployment..."
          echo "environment=production" >> $GITHUB_OUTPUT
          echo "version=v2.0.0" >> $GITHUB_OUTPUT
          echo "url=https://example.com" >> $GITHUB_OUTPUT

      - name: Send Deployment Notification
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: deploy
          message: |
            üöÄ **Deployment Successful**

            Version ${{ steps.deploy.outputs.version }} has been deployed to ${{ steps.deploy.outputs.environment }}.
          template_vars: |
            {
              "deployStatus": "successful",
              "version": "${{ steps.deploy.outputs.version }}",
              "environment": "${{ steps.deploy.outputs.environment }}"
            }
          inline_keyboard: |
            [
              [
                {"text": "üåê View Site", "url": "${{ steps.deploy.outputs.url }}"},
                {"text": "üìä Monitoring", "url": "https://monitoring.example.com"},
                {"text": "üìù Logs", "url": "https://logs.example.com"}
              ]
            ]

      # Example: Enhanced Pull Request Deployment with Statistics
      - name: Mock PR Deployment with Stats
        id: pr-deploy
        run: |
          echo "Simulating PR deployment with statistics..."
          echo "pr_number=42" >> $GITHUB_OUTPUT
          echo "files_changed=15" >> $GITHUB_OUTPUT
          echo "additions=340" >> $GITHUB_OUTPUT
          echo "deletions=75" >> $GITHUB_OUTPUT
          echo "commits=3" >> $GITHUB_OUTPUT

      - name: Send Enhanced PR Deployment Notification
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: deploy
          language: en
          message: |
            Enhanced deployment notification with detailed statistics and PR information.
          template_vars: |
            {
              "deployStatus": "successful",
              "baseBranch": "main",
              "headBranch": "feature/enhanced-notifications",
              "filesChanged": "${{ steps.pr-deploy.outputs.files_changed }}",
              "commitCount": "${{ steps.pr-deploy.outputs.commits }}",
              "additions": "${{ steps.pr-deploy.outputs.additions }}",
              "deletions": "${{ steps.pr-deploy.outputs.deletions }}",
              "author": "${{ github.actor }}",
              "prCreatedAt": "${{ github.event.head_commit.timestamp }}",
              "prTitle": "Enhanced notification templates with beautiful formatting"
            }
          inline_keyboard: |
            [
              [
                {"text": "üîó View PR", "url": "${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.pr-deploy.outputs.pr_number }}"},
                {"text": "üìä Workflow Run", "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}
              ],
              [
                {"text": "üìù Commit", "url": "${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"},
                {"text": "üå≤ Repository", "url": "${{ github.server_url }}/${{ github.repository }}"}
              ]
            ]

  # 8. Summary
  summary:
    name: Examples Summary
    runs-on: ubuntu-latest
    needs:
      [
        basic-examples,
        template-examples,
        file-examples,
        advanced-examples,
        multilingual-examples,
        error-handling-examples,
        integration-examples,
      ]
    if: always() && github.event.inputs.example_type == 'all'
    steps:
      - uses: actions/checkout@v4

      - name: Send Summary
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: success
          message: |
            üéâ **Usage Examples Completed**

            All usage examples have been executed successfully!

            **Examples Covered:**
            ‚Ä¢ Basic messaging and formatting
            ‚Ä¢ Template usage with variables
            ‚Ä¢ File uploads (documents, images)
            ‚Ä¢ Advanced features (keyboards, retry logic)
            ‚Ä¢ Multi-language support
            ‚Ä¢ Error handling
            ‚Ä¢ Integration scenarios

            Check your Telegram chat to see all the examples in action!
          template_vars: |
            {
              "customMessage": "You can use these examples as a reference for implementing the Telegram Notify Action in your own workflows."
            }
          inline_keyboard: |
            [
              [
                {"text": "üìñ Documentation", "url": "https://github.com/${{ github.repository }}/blob/main/README.md"},
                {"text": "üíæ Download Action", "url": "https://github.com/${{ github.repository }}"},
                {"text": "üêõ Report Issues", "url": "https://github.com/${{ github.repository }}/issues"}
              ]
            ]
