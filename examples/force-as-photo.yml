# Example: Force sending images as photo even with C2PA metadata
# This example demonstrates how to override automatic C2PA handling

name: Force as Photo Example

on:
  workflow_dispatch:

jobs:
  force-as-photo-demo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Example 1: Default behavior (C2PA auto-conversion)
      - name: üì∏ Send image (Default - Auto C2PA handling)
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          file_path: "test-image.png"
          file_type: "photo"
          caption: |
            üì∏ **Default Behavior**

            This image has C2PA metadata and will be automatically
            switched to document type for better compatibility.
          language: "en"

      # Example 2: Force as photo (override C2PA auto-conversion)
      - name: üñºÔ∏è Send image (Force as Photo)
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          file_path: "test-image.png"
          file_type: "photo"
          force_as_photo: "true" # üî• This forces photo even with C2PA
          caption: |
            üñºÔ∏è **Forced as Photo (force_as_photo=true)**

            This image is sent as photo even though it contains C2PA
            metadata. May cause processing issues on Telegram side.
          language: "ru"

      # Example 3: Base64 with force_as_photo
      - name: üé® Convert to base64 and force as photo
        run: |
          base64_data=$(base64 -i test-image.png)
          echo "base64_data=$base64_data" >> $GITHUB_OUTPUT
        id: base64-convert

      - name: üì§ Send base64 image (Force as Photo)
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          file_base64: ${{ steps.base64-convert.outputs.base64_data }}
          file_name: "forced-photo-from-base64.png"
          file_type: "photo"
          force_as_photo: "true"
          caption: |
            üì§ **Base64 + Force as Photo**

            Image from base64 data, forced to send as photo
            despite C2PA metadata warnings.
          template: "success"
          template_vars: |
            {
              "customMessage": "Force as photo functionality working perfectly!"
            }

  # Comparison job to show the difference
  comparison-demo:
    runs-on: ubuntu-latest
    needs: force-as-photo-demo
    steps:
      - uses: actions/checkout@v4

      - name: üìä Send comparison summary
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            üìä **Force as Photo Comparison Complete**

            Three test images were sent:
            1Ô∏è‚É£ **Default**: Auto-converted to document (recommended)
            2Ô∏è‚É£ **Forced**: Sent as photo despite C2PA metadata
            3Ô∏è‚É£ **Base64**: From base64 data, forced as photo

            Use `force_as_photo: "true"` when you need images
            to appear as photos in Telegram even with metadata issues.

            ‚ö†Ô∏è **Warning**: Forced photos with C2PA metadata may
            cause processing issues on Telegram's side.
          template: "info"
          template_vars: |
            {
              "customMessage": "Force as photo demo completed successfully! üéâ"
            }
          inline_keyboard: |
            [
              [
                {"text": "üìñ Documentation", "url": "https://github.com/${{ github.repository }}/blob/main/README.md"},
                {"text": "üß™ More Examples", "url": "https://github.com/${{ github.repository }}/tree/main/examples"}
              ]
            ]
