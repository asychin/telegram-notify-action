name: Documentation Testing

on:
  push:
    paths:
      - 'docs/**'
      - 'README.md'
      - '**/*.md'
  pull_request:
    paths:
      - 'docs/**'
      - 'README.md' 
      - '**/*.md'
  workflow_dispatch:

jobs:
  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [en, ru, zh]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g markdownlint-cli
          npm install -g markdown-link-check

      - name: Validate Markdown syntax (${{ matrix.language }})
        run: |
          case "${{ matrix.language }}" in
            "en")
              markdownlint docs/en/ README.md || exit 1
              ;;
            "ru")  
              markdownlint docs/ru/ || exit 1
              ;;
            "zh")
              markdownlint docs/zh/ || exit 1
              ;;
          esac

      - name: Check for broken links (${{ matrix.language }})
        run: |
          case "${{ matrix.language }}" in
            "en")
              markdown-link-check docs/en/README.md --config .github/markdown-link-check-config.json || echo "‚ö†Ô∏è Link check warnings in English docs"
              markdown-link-check docs/en/TEMPLATE-SYSTEM.md --config .github/markdown-link-check-config.json || echo "‚ö†Ô∏è Link check warnings in English template docs"
              ;;
            "ru")
              markdown-link-check docs/ru/README.md --config .github/markdown-link-check-config.json || echo "‚ö†Ô∏è Link check warnings in Russian docs"
              markdown-link-check docs/ru/TEMPLATE-SYSTEM.md --config .github/markdown-link-check-config.json || echo "‚ö†Ô∏è Link check warnings in Russian template docs"
              ;;
            "zh")
              markdown-link-check docs/zh/README.md --config .github/markdown-link-check-config.json || echo "‚ö†Ô∏è Link check warnings in Chinese docs"
              markdown-link-check docs/zh/TEMPLATE-SYSTEM.md --config .github/markdown-link-check-config.json || echo "‚ö†Ô∏è Link check warnings in Chinese template docs"
              ;;
          esac

      - name: Validate documentation consistency
        if: matrix.language == 'en'
        run: |
          echo "‚úÖ Documentation validation completed"
          echo "Auto-context variables are integrated into main documentation"

      - name: Check translation consistency
        run: |
          echo "Checking translation consistency for ${{ matrix.language }}..."
          
          # Basic file existence check
          case "${{ matrix.language }}" in
            "en")
              test -f docs/en/README.md || (echo "‚ùå Missing docs/en/README.md" && exit 1)
              test -f docs/en/TEMPLATE-SYSTEM.md || (echo "‚ùå Missing docs/en/TEMPLATE-SYSTEM.md" && exit 1)
              ;;
            "ru")
              test -f docs/ru/README.md || (echo "‚ùå Missing docs/ru/README.md" && exit 1) 
              test -f docs/ru/TEMPLATE-SYSTEM.md || (echo "‚ùå Missing docs/ru/TEMPLATE-SYSTEM.md" && exit 1)
              ;;
            "zh")
              test -f docs/zh/README.md || (echo "‚ùå Missing docs/zh/README.md" && exit 1)
              test -f docs/zh/TEMPLATE-SYSTEM.md || (echo "‚ùå Missing docs/zh/TEMPLATE-SYSTEM.md" && exit 1)
              ;;
          esac
          
          echo "‚úÖ Translation files exist for ${{ matrix.language }}"

  notify-results:
    name: Notify Test Results
    runs-on: ubuntu-latest
    needs: validate-docs
    if: always()
    steps:
      - name: Notify success
        if: needs.validate-docs.result == 'success'
        uses: asychin/telegram-notify-action@v3
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: success
          message: |
            ‚úÖ **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ**
            
            üìö **–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —è–∑—ã–∫–æ–≤:** –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Ä—É—Å—Å–∫–∏–π, –∫–∏—Ç–∞–π—Å–∫–∏–π
            üîç **–ü—Ä–æ–≤–µ—Ä–∫–∏:**
            - –°–∏–Ω—Ç–∞–∫—Å–∏—Å Markdown ‚úÖ
            - –ë–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏ ‚úÖ
            - –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ‚úÖ
            - –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤ ‚úÖ
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üîÑ **Workflow:** {{workflow}}
            üë§ **–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä:** {{actor}}
            üîó **–°—Å—ã–ª–∫–∞:** {{serverUrl}}/{{repository}}/actions/runs/{{runId}}

      - name: Notify failure
        if: needs.validate-docs.result == 'failure'
        uses: asychin/telegram-notify-action@v3
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: error
          message: |
            ‚ùå **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏**
            
            üìö **–Ø–∑—ã–∫–∏:** –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Ä—É—Å—Å–∫–∏–π, –∫–∏—Ç–∞–π—Å–∫–∏–π
            üö´ **–°—Ç–∞—Ç—É—Å:** –ï—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üîÑ **Workflow:** {{workflow}}
            üë§ **–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä:** {{actor}}
            üîó **–ò—Å–ø—Ä–∞–≤–∏—Ç—å:** {{serverUrl}}/{{repository}}/actions/runs/{{runId}}
            
            üîç **–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:**
            - –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ Markdown
            - –ë–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏
            - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
            - –ù–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤