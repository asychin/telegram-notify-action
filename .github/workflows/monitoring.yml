name: Repository Monitoring

on:
  issues:
    types: [opened, closed, reopened, labeled]
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, closed, ready_for_review]
  pull_request_review:
    types: [submitted]
  discussion:
    types: [created, answered]
  schedule:
    # Daily health check at 9:00 UTC
    - cron: "0 9 * * *"
  workflow_dispatch:
    inputs:
      check_type:
        description: "Type of check to perform"
        required: false
        default: "health"
        type: choice
        options:
          - health
          - stats
          - security

jobs:
  issue-notifications:
    name: Issue Notifications
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || github.event_name == 'issue_comment'
    steps:
      - uses: actions/checkout@v4

      - name: Determine notification type
        id: notification-type
        run: |
          case "${{ github.event.action }}" in
            "opened")
              echo "template=warning" >> $GITHUB_OUTPUT
              ;;
            "closed")
              echo "template=success" >> $GITHUB_OUTPUT
              ;;
            "reopened")
              echo "template=warning" >> $GITHUB_OUTPUT
              ;;
            "labeled")
              echo "template=info" >> $GITHUB_OUTPUT
              ;;
            "created")
              echo "template=info" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Send issue notification
        if: github.event_name == 'issues'
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: ${{ steps.notification-type.outputs.template }}
          message: |
            üêõ **Issue {{action}}**
            
            **–ó–∞–≥–æ–ª–æ–≤–æ–∫:** {{issueTitle}}
            **–ù–æ–º–µ—Ä:** #{{issueNumber}}
            **–ê–≤—Ç–æ—Ä:** {{issueAuthor}}
            **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {{issueState}}
            **–ú–µ—Ç–∫–∏:** {{labels}}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {{repositoryOwner}}
            üîó **–°—Å—ã–ª–∫–∞:** {{issueUrl}}
            
            üìä **–ö–æ–Ω—Ç–µ–∫—Å—Ç GitHub:**
            - Workflow: {{workflow}}
            - –ó–∞–ø—É—Å–∫: #{{runNumber}}
            - –ê–∫—Ç–æ—Ä: {{actor}}
            - –°–æ–±—ã—Ç–∏–µ: {{eventName}}
            - Runner: {{runnerName}} –Ω–∞ {{runnerOs}}
            
            üìù **–û–ø–∏—Å–∞–Ω–∏–µ:**
            {{issueBody}}
          inline_keyboard: |
            [
              {"text": "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "url": "{{issueUrl}}"},
              {"text": "üí¨ –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å", "url": "{{issueUrl}}#issuecomment-new"},
              {"text": "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "url": "{{issueUrl}}"}
            ]

      - name: Send comment notification
        if: github.event_name == 'issue_comment'
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: info
          message: |
            üí¨ **–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ Issue**
            
            **Issue:** #{{issueNumber}} - {{issueTitle}}
            **–ê–≤—Ç–æ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:** {{commentAuthor}}
            **–í—Ä–µ–º—è:** {{commentCreatedAt}}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {{repositoryOwner}}
            
            üìä **–ö–æ–Ω—Ç–µ–∫—Å—Ç:**
            - Workflow: {{workflow}}
            - Runner: {{runnerName}} ({{runnerOs}})
            - –ê–∫—Ç–æ—Ä: {{actor}}
            
            üí≠ **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:**
            {{commentBody}}
          inline_keyboard: |
            [
              {"text": "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "url": "{{commentUrl}}"},
              {"text": "üìù –û—Ç–≤–µ—Ç–∏—Ç—å", "url": "{{issueUrl}}#issuecomment-new"},
              {"text": "üîó –ö Issue", "url": "{{issueUrl}}"}
            ]

  pr-notifications:
    name: Pull Request Notifications
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'pull_request_review'
    steps:
      - uses: actions/checkout@v4

      - name: Determine PR notification type
        id: pr-notification-type
        run: |
          case "${{ github.event.action }}" in
            "opened")
              echo "template=info" >> $GITHUB_OUTPUT
              ;;
            "closed")
              if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
                echo "template=success" >> $GITHUB_OUTPUT
              else
                echo "template=warning" >> $GITHUB_OUTPUT
              fi
              ;;
            "ready_for_review")
              echo "template=info" >> $GITHUB_OUTPUT
              ;;
            "submitted")
              echo "template=info" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Send PR notification
        if: github.event_name == 'pull_request'
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: ${{ steps.pr-notification-type.outputs.template }}
          message: |
            üîÑ **Pull Request {{prAction}}**
            
            **–ó–∞–≥–æ–ª–æ–≤–æ–∫:** {{prTitle}}
            **–ù–æ–º–µ—Ä:** #{{prNumber}}
            **–ê–≤—Ç–æ—Ä:** {{prAuthor}}
            **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {{prState}}
            
            üîÄ **–í–µ—Ç–∫–∏:**
            - –ò–∑: {{prHeadRef}} ({{prHeadSha}})
            - –í: {{prBaseRef}}
            
            üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
            - –ö–æ–º–º–∏—Ç—ã: {{prCommits}}
            - –ò–∑–º–µ–Ω–µ–Ω–∏—è: +{{prAdditions}} -{{prDeletions}}
            - –§–∞–π–ª–æ–≤: {{prChangedFiles}}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {{repositoryOwner}}
            üîó **–°—Å—ã–ª–∫–∞:** {{prUrl}}
            
            üìã **–ö–æ–Ω—Ç–µ–∫—Å—Ç GitHub:**
            - Workflow: {{workflow}}
            - –ó–∞–ø—É—Å–∫: #{{runNumber}}
            - Runner: {{runnerName}} –Ω–∞ {{runnerOs}}
            - –ê–∫—Ç–æ—Ä: {{actor}}
            
            üìù **–û–ø–∏—Å–∞–Ω–∏–µ:**
            {{prBody}}
          inline_keyboard: |
            [
              {"text": "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "url": "{{prUrl}}"},
              {"text": "üìù –†–µ–≤—å—é", "url": "{{prUrl}}/files"},
              {"text": "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", "url": "{{prUrl}}/files#submit-review"}
            ]

      - name: Send review notification
        if: github.event_name == 'pull_request_review'
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: info
          message: |
            üìù **–û–±–∑–æ—Ä Pull Request**
            
            **PR:** #{{prNumber}} - {{prTitle}}
            **–†–µ–≤—å—é–µ—Ä:** {{reviewAuthor}}
            **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {{reviewState}}
            **ID —Ä–µ–≤—å—é:** {{reviewId}}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {{repositoryOwner}}
            
            üìä **–ö–æ–Ω—Ç–µ–∫—Å—Ç:**
            - Workflow: {{workflow}}
            - Runner: {{runnerName}} ({{runnerOs}})
            - –ê–∫—Ç–æ—Ä: {{actor}}
            
            üí≠ **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–≤—å—é:**
            {{reviewBody}}
          inline_keyboard: |
            [
              {"text": "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–≤—å—é", "url": "{{reviewUrl}}"},
              {"text": "üìù –ö PR", "url": "{{prUrl}}"},
              {"text": "üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å", "url": "{{prUrl}}#discussion_r"}
            ]

  discussion-notifications:
    name: Discussion Notifications
    runs-on: ubuntu-latest
    if: github.event_name == 'discussion'
    steps:
      - uses: actions/checkout@v4

      - name: Send discussion notification
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: info
          message: |
            üí¨ **–û–±—Å—É–∂–¥–µ–Ω–∏–µ {{action}}**
            
            **–ó–∞–≥–æ–ª–æ–≤–æ–∫:** {{discussionTitle}}
            **–ê–≤—Ç–æ—Ä:** {{discussionAuthor}}
            **–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {{discussionCategory}}
            **ID:** {{discussionId}}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {{repositoryOwner}}
            üîó **–°—Å—ã–ª–∫–∞:** {{discussionUrl}}
            
            üìä **–ö–æ–Ω—Ç–µ–∫—Å—Ç GitHub:**
            - Workflow: {{workflow}}
            - –ó–∞–ø—É—Å–∫: #{{runNumber}}
            - Runner: {{runnerName}} –Ω–∞ {{runnerOs}}
            - –ê–∫—Ç–æ—Ä: {{actor}}
            - –í—Ä–µ–º—è: {{triggeredAt}}
            
            üìù **–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:**
            {{discussionBody}}
          inline_keyboard: |
            [
              {"text": "üí¨ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", "url": "{{discussionUrl}}"},
              {"text": "üëç –†–µ–∞–∫—Ü–∏—è", "url": "{{discussionUrl}}"},
              {"text": "‚úçÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", "url": "{{discussionUrl}}#discussioncomment-new"}
            ]

  health-check:
    name: Repository Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.check_type == 'health')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run health checks
        id: health-check
        run: |
          echo "Running repository health checks..."

          # Check for security vulnerabilities
          AUDIT_RESULT=$(npm audit --audit-level high --json || echo '{}')
          VULNERABILITIES=$(echo "$AUDIT_RESULT" | jq -r '.metadata.vulnerabilities.total // 0')

          # Check test coverage
          npm run test:coverage > /dev/null 2>&1 || true
          if [ -f coverage/coverage-summary.json ]; then
            COVERAGE=$(jq -r '.total.lines.pct' coverage/coverage-summary.json)
          else
            COVERAGE="N/A"
          fi

          # Check for outdated dependencies
          OUTDATED=$(npm outdated --json 2>/dev/null | jq -r 'keys | length' || echo "0")

          # Check repository size
          REPO_SIZE=$(du -sh . | cut -f1)

          echo "vulnerabilities=$VULNERABILITIES" >> $GITHUB_OUTPUT
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "outdated=$OUTDATED" >> $GITHUB_OUTPUT
          echo "repo_size=$REPO_SIZE" >> $GITHUB_OUTPUT

          # Determine health status
          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "status=warning" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
          fi

      - name: Send health check notification
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: ${{ steps.health-check.outputs.status }}
          message: |
            üè• **–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è**
            
            **–†–µ–∑—É–ª—å—Ç–∞—Ç:** ${{ steps.health-check.outputs.status == 'success' && '‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ' || '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' }}
            **–†–∞–∑–º–µ—Ä:** ${{ steps.health-check.outputs.repo_size }}
            **–ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏:** ${{ steps.health-check.outputs.coverage }}%
            **–£—è–∑–≤–∏–º–æ—Å—Ç–∏:** ${{ steps.health-check.outputs.vulnerabilities }}
            **–£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –ø–∞–∫–µ—Ç—ã:** ${{ steps.health-check.outputs.outdated }}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {{repositoryOwner}}
            üÜî **ID —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:** {{repositoryId}}
            
            üìä **–ö–æ–Ω—Ç–µ–∫—Å—Ç GitHub:**
            - Workflow: {{workflow}}
            - –ó–∞–¥–∞—á–∞: {{job}}
            - –ó–∞–ø—É—Å–∫: #{{runNumber}} (ID: {{runId}})
            - Runner: {{runnerName}} –Ω–∞ {{runnerOs}}
            - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {{runnerArch}}
            - –í—Ä–µ–º—è: {{triggeredAt}}
            
            üåê **–û–∫—Ä—É–∂–µ–Ω–∏–µ:**
            - Actions Environment: {{actionsEnvironment}}
            - Workspace: {{workspace}}
            - Tool Cache: {{runnerToolCache}}
            - Temp: {{runnerTemp}}
            
            üîó **GitHub URLs:**
            - –°–µ—Ä–≤–µ—Ä: {{serverUrl}}
            - API: {{apiUrl}}
            - GraphQL: {{graphqlUrl}}
          inline_keyboard: |
            [
              {"text": "üìä –î–µ–π—Å—Ç–≤–∏—è", "url": "{{serverUrl}}/{{repository}}/actions"},
              {"text": "üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "url": "{{serverUrl}}/{{repository}}/security"},
              {"text": "üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "url": "{{serverUrl}}/{{repository}}/pulse"},
              {"text": "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "url": "{{serverUrl}}/{{repository}}/settings"}
            ]

  repository-stats:
    name: Repository Statistics
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.check_type == 'stats'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for stats

      - name: Generate repository statistics
        id: stats
        run: |
          # Get commit statistics
          TOTAL_COMMITS=$(git rev-list --all --count)
          COMMITS_THIS_MONTH=$(git rev-list --since="1 month ago" --count HEAD)
          CONTRIBUTORS=$(git log --format='%ae' | sort | uniq | wc -l)

          # Get file statistics
          TOTAL_FILES=$(find . -type f -not -path './.git/*' -not -path './node_modules/*' | wc -l)
          CODE_LINES=$(find . -name "*.js" -not -path './node_modules/*' -not -path './.git/*' | xargs wc -l | tail -1 | awk '{print $1}')

          # Get latest release
          LATEST_RELEASE=$(git describe --tags --abbrev=0 2>/dev/null || echo "No releases")

          echo "total_commits=$TOTAL_COMMITS" >> $GITHUB_OUTPUT
          echo "commits_this_month=$COMMITS_THIS_MONTH" >> $GITHUB_OUTPUT
          echo "contributors=$CONTRIBUTORS" >> $GITHUB_OUTPUT
          echo "total_files=$TOTAL_FILES" >> $GITHUB_OUTPUT
          echo "code_lines=$CODE_LINES" >> $GITHUB_OUTPUT
          echo "latest_release=$LATEST_RELEASE" >> $GITHUB_OUTPUT

      - name: Send statistics report
        uses: ./
        with:
          telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          template: info
          message: |
            üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è**
            
            **–í—Å–µ–≥–æ –∫–æ–º–º–∏—Ç–æ–≤:** ${{ steps.stats.outputs.total_commits }}
            **–ó–∞ –º–µ—Å—è—Ü:** ${{ steps.stats.outputs.commits_this_month }}
            **–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** ${{ steps.stats.outputs.contributors }}
            **–§–∞–π–ª–æ–≤:** ${{ steps.stats.outputs.total_files }}
            **–°—Ç—Ä–æ–∫ –∫–æ–¥–∞:** ${{ steps.stats.outputs.code_lines }}
            **–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–ª–∏–∑:** ${{ steps.stats.outputs.latest_release }}
            
            üè¢ **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** {{repository}}
            üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {{repositoryOwner}}
            üÜî **ID:** {{repositoryId}}
            
            üìä **–ö–æ–Ω—Ç–µ–∫—Å—Ç GitHub:**
            - Workflow: {{workflow}}
            - –ó–∞–¥–∞—á–∞: {{job}}
            - –ó–∞–ø—É—Å–∫: #{{runNumber}}
            - Runner: {{runnerName}} –Ω–∞ {{runnerOs}}
            - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {{runnerArch}}
            - –í—Ä–µ–º—è: {{triggeredAt}}
            
            üåê **–û–∫—Ä—É–∂–µ–Ω–∏–µ:**
            - Actions Environment: {{actionsEnvironment}}
            - Workspace: {{workspace}}
            - Server: {{serverUrl}}
          inline_keyboard: |
            [
              {"text": "üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "url": "{{serverUrl}}/{{repository}}/pulse"},
              {"text": "üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏", "url": "{{serverUrl}}/{{repository}}/graphs/contributors"},
              {"text": "üìä –¢—Ä–∞—Ñ–∏–∫", "url": "{{serverUrl}}/{{repository}}/graphs/traffic"},
              {"text": "üè∑Ô∏è –†–µ–ª–∏–∑—ã", "url": "{{serverUrl}}/{{repository}}/releases"}
            ]
